Plug 'tpope/vim-surround'
Plug 'preservim/nerdtree'

"------------------------------------------------------------------------------
" General stuff -- mostly 'set' stuff.
"------------------------------------------------------------------------------
set hlsearch
set rnu " Relative line numbers
set nu " Line numbers
set incsearch
set smartcase
set ignorecase
set autoindent
set nrformats+=alpha " To increment letters in addition to numbers
set clipboard+=unnamed
language en_US
syntax on

"------------------------------------------------------------------------------
" Key-bindings follow.
"------------------------------------------------------------------------------
" set leader
let mapleader = "\<Space>"

" -------
" WINDOWS
" -------
" bind Ctrl+<movement> keys to move around the windows
nnoremap <silent> <c-j> <c-w>j
nnoremap <silent> <c-k> <c-w>k
nnoremap <silent> <c-l> <c-w>l
nnoremap <silent> <c-h> <c-w>h
" Window resize
" Height:
nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>
" ----
" TABS
" ----
" move around between tabs:
nnoremap <leader>1 1gt
nnoremap <leader>2 2gt
nnoremap <leader>3 3gt
nnoremap <leader>4 4gt
nnoremap <leader>5 5gt
nnoremap <leader>6 6gt
nnoremap <leader>7 7gt
nnoremap <leader>8 8gt
nnoremap <leader>9 9gt
" open and close:
nnoremap <leader>to :tabnew%<CR>
nnoremap <leader>tc :tabclose<CR>


" write file
nnoremap <leader>w :w!<cr>

" quit file
nnoremap <c-q> :q!<cr>


" Use CTRL-L instead of <Esc> for relevant modes
inoremap <c-l> <esc>
xnoremap <c-l> <esc>
tnoremap <c-l> <C-\><C-n>

" Jumplist fix. Since <Tab> is going to be used for indentation, we need to remap <C-i>
nnoremap <C-n> <C-i>

" Fix indentaion mapping
nnoremap <Tab> >>_
vnoremap <Tab> >
nnoremap <S-Tab> <<
vnoremap <S-Tab> <<
inoremap <S-Tab> <C-d>

" Register mapping
vnoremap <leader>pp "_dP

" Navigate quickfix list with ease
nnoremap <silent> [p :cprevious<CR>
nnoremap <silent> [n :cnext<CR>
nnoremap <silent> <c-[> :cprevious<CR>zz
nnoremap <silent> <c-]> :cnext<CR>zz
nnoremap <silent> <c-,> :lprevious<CR>zz
nnoremap <silent> <c-.> :lnext<CR>zz

" Keep cursor in middle when jumping and searching
nmap <C-d> <C-d>zz
nmap <C-u> <C-u>zz
nmap n nzzzv
nmap N Nzzzv

" Move a bit more than just one line at a time
nmap <silent> <C-e> 3<C-e>
nmap <silent> <C-y> 3<C-y>

" Go to code
nmap gd <Action>(GotoDeclaration)
nmap gm <Action>(GotoImplementation)

"sr = show references:
nmap <leader>sr <Action>(ShowUsages) 

" File
nmap <c-p> <Action>(GotoFile)

" Text (rg since I'm used to ripgrep)
nmap <leader>rg <Action>(FindInPath)

" Refactoring
nmap <leader>rn <Action>(RenameElement)

" Errors
nmap <leader>e <action>(ShowErrorDescription)

" Debug
nmap <leader>da <Action>(Debug)
nmap <leader>ds <Action>(Stop)
nmap <leader>dn <Action>(Resume)
nmap <leader>db <Action>(ToggleLineBreakpoint)
nmap <leader>do <Action>(StepOver)
nmap <leader>di <Action>(StepInto)
nmap <leader>du <Action>(StepOut)
nmap <leader>de <Action>(QuickEvaluateExpression)
nmap <leader>dc <Action>(Debugger.RemoveAllBreakpoints)

" Tests
nmap <leader>tr <Action>(RiderUnitTestRunContextAction)
nmap <leader>td <Action>(RiderUnitTestDebugContextAction)

" NerdTree
nmap <leader>n :NERDTreeToggle<CR>

" Trying to use <c-k> for '<UP-ARROW>'
imap <c-k> <c-p>
